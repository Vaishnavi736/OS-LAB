//Program-1
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
    if (argc != 3) {
        printf("Usage: %s source_file destination_file\n", argv[0]);
        return 1;
    }

    FILE *src = fopen(argv[1], "r");
    if (src == NULL) {
        perror("Unable to open source file");
        return 1;
    }

    FILE *dest = fopen(argv[2], "w");
    if (dest == NULL) {
        perror("Unable to open destination file");
        fclose(src);
        return 1;
    }

    char ch;
    while ((ch = fgetc(src)) != EOF) {
        fputc(ch, dest);
    }

    printf("File copied successfully from %s to %s\n", argv[1], argv[2]);

    fclose(src);
    fclose(dest);
    return 0;
}
//Program 2
#include <stdio.h>
#include <dirent.h>

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s directory_name\n", argv[0]);
        return 1;
    }

    DIR *dp = opendir(argv[1]);
    if (dp == NULL) {
        perror("Unable to open directory");
        return 1;
    }

    printf("Contents of the directory %s are:\n", argv[1]);
    struct dirent *entry;
    while ((entry = readdir(dp)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    closedir(dp);
    return 0;
}
//Program 3
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX 1024

void usage() {
    printf("Usage: ./a.out filename word\n");
}

int main(int argc, char *argv[]) {
    if (argc != 3) {
        usage();
        return 1;
    }

    FILE *fp = fopen(argv[1], "r");
    if (fp == NULL) {
        perror("Unable to open file");
        return 1;
    }

    char line[MAX];
    int line_number = 0;
    int occurrences = 0;

    while (fgets(line, MAX, fp) != NULL) {
        line_number++;
        if (strstr(line, argv[2]) != NULL) {
            printf("%s: Line %d: %s", argv[1], line_number, line);
            occurrences++;
        }
    }

    if (occurrences == 0) {
        printf("No occurrences of the word '%s' found in the file %s\n", argv[2], argv[1]);
    } else {
        printf("\nTotal occurrences: %d\n", occurrences);
    }

    fclose(fp);
    return 0;
}
